/*
 * Generated by Bluespec Compiler (build 26e119fb)
 * 
 * On Sat Oct  2 10:49:54 IST 2021
 * 
 */

/* Generation options: */
#ifndef __mkCnocTop_h__
#define __mkCnocTop_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"
#include "mkFromHardwareOutput.h"
#include "mkIntoHardwareInput.h"


/* Class declaration for the mkCnocTop module */
class MOD_mkCnocTop : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_mkFromHardwareOutput INST_lFromHardwareOutput;
  MOD_Reg<tUInt8> INST_lFromHardwareOutputNoc_bpState;
  MOD_Fifo<tUInt32> INST_lFromHardwareOutputNoc_fifoMsgSource;
  MOD_Reg<tUInt32> INST_lFromHardwareOutputNoc_messageWordsReg;
  MOD_Reg<tUInt8> INST_lFromHardwareOutputNoc_methodIdReg;
  MOD_Reg<tUInt64> INST_lIirfilter_data_f_b;
  MOD_Reg<tUInt32> INST_lIirfilter_data_f_f;
  MOD_Reg<tUInt8> INST_lIirfilter_samples_x_0;
  MOD_Reg<tUInt8> INST_lIirfilter_samples_x_1;
  MOD_Reg<tUInt8> INST_lIirfilter_samples_x_2;
  MOD_Reg<tUInt8> INST_lIirfilter_samples_x_3;
  MOD_Reg<tUInt8> INST_lIirfilter_samples_x_4;
  MOD_Reg<tUInt8> INST_lIirfilter_samples_x_5;
  MOD_Reg<tUInt8> INST_lIirfilter_samples_x_6;
  MOD_Reg<tUInt8> INST_lIirfilter_samples_x_7;
  MOD_Reg<tUInt8> INST_lIirfilter_samples_x_8;
  MOD_Reg<tUInt64> INST_lIirfilter_samples_y_0;
  MOD_Reg<tUInt64> INST_lIirfilter_samples_y_1;
  MOD_Reg<tUInt64> INST_lIirfilter_samples_y_2;
  MOD_Reg<tUInt64> INST_lIirfilter_samples_y_3;
  MOD_Reg<tUInt64> INST_lIirfilter_samples_y_4;
  MOD_Reg<tUInt64> INST_lIirfilter_samples_y_5;
  MOD_Reg<tUInt64> INST_lIirfilter_samples_y_6;
  MOD_Reg<tUInt64> INST_lIirfilter_samples_y_7;
  MOD_Reg<tUInt64> INST_lIirfilter_samples_y_8;
  MOD_Reg<tUInt64> INST_lIirfilter_sig_dout;
  MOD_mkIntoHardwareInput INST_lIntoHardwareInput;
  MOD_Reg<tUInt8> INST_lIntoHardwareInputNoc_bpState;
  MOD_Fifo<tUInt32> INST_lIntoHardwareInputNoc_fifoMsgSink;
  MOD_Reg<tUInt8> INST_lIntoHardwareInputNoc_messageWordsReg;
  MOD_Reg<tUInt8> INST_lIntoHardwareInputNoc_methodIdReg;
 
 /* Constructor */
 public:
  MOD_mkCnocTop(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
  tUWide PORT_readers_1_readData_put;
  tUWide PORT_readers_0_readData_put;
  tUWide PORT_writers_1_writeData_get;
  tUWide PORT_writers_1_writeReq_get;
  tUWide PORT_writers_0_writeData_get;
  tUWide PORT_writers_0_writeReq_get;
  tUWide PORT_readers_1_readReq_get;
  tUWide PORT_readers_0_readReq_get;
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_lFromHardwareOutputNoc_fifoMsgSource_i_notEmpty____d112;
  tUInt8 DEF_lFromHardwareOutput_portalIfc_indications_0_no_ETC___d61;
  tUInt8 DEF_lIntoHardwareInputNoc_methodIdReg_02_EQ_0___d103;
  tUInt8 DEF_lFromHardwareOutputNoc_methodIdReg_5_EQ_0___d76;
 
 /* Local definitions */
 private:
  tUInt32 DEF_data__h6306;
  tUWide DEF__48_MUL_SEXT_lIirfilter_samples_y_4_3_4___d45;
  tUWide DEF__18446744073709551346_MUL_SEXT_lIirfilter_sampl_ETC___d40;
  tUWide DEF__18446744073709551009_MUL_SEXT_lIirfilter_sampl_ETC___d31;
  tUWide DEF__592_MUL_SEXT_lIirfilter_samples_y_2_3_4___d35;
 
 /* Rules */
 public:
  void RL_handle_hardware_input_request();
  void RL_lFromHardwareOutputNoc_sendHeader();
  void RL_lFromHardwareOutputNoc_sendMessage();
  void RL_lIntoHardwareInputNoc_receiveMessageHeader();
  void RL_lIntoHardwareInputNoc_receiveMessage();
 
 /* Methods */
 public:
  tUInt32 METH_requests_0_id();
  tUInt8 METH_RDY_requests_0_id();
  tUInt32 METH_indications_0_id();
  tUInt8 METH_RDY_indications_0_id();
  void METH_requests_0_message_enq(tUInt32 ARG_requests_0_message_enq_v);
  tUInt8 METH_RDY_requests_0_message_enq();
  tUInt8 METH_requests_0_message_notFull();
  tUInt8 METH_RDY_requests_0_message_notFull();
  tUInt32 METH_indications_0_message_first();
  tUInt8 METH_RDY_indications_0_message_first();
  void METH_indications_0_message_deq();
  tUInt8 METH_RDY_indications_0_message_deq();
  tUInt8 METH_indications_0_message_notEmpty();
  tUInt8 METH_RDY_indications_0_message_notEmpty();
  tUWide METH_readers_0_readReq_get();
  tUInt8 METH_RDY_readers_0_readReq_get();
  void METH_readers_0_readData_put(tUWide ARG_readers_0_readData_put);
  tUInt8 METH_RDY_readers_0_readData_put();
  tUWide METH_readers_1_readReq_get();
  tUInt8 METH_RDY_readers_1_readReq_get();
  void METH_readers_1_readData_put(tUWide ARG_readers_1_readData_put);
  tUInt8 METH_RDY_readers_1_readData_put();
  tUWide METH_writers_0_writeReq_get();
  tUInt8 METH_RDY_writers_0_writeReq_get();
  tUWide METH_writers_0_writeData_get();
  tUInt8 METH_RDY_writers_0_writeData_get();
  void METH_writers_0_writeDone_put(tUInt8 ARG_writers_0_writeDone_put);
  tUInt8 METH_RDY_writers_0_writeDone_put();
  tUWide METH_writers_1_writeReq_get();
  tUInt8 METH_RDY_writers_1_writeReq_get();
  tUWide METH_writers_1_writeData_get();
  tUInt8 METH_RDY_writers_1_writeData_get();
  void METH_writers_1_writeDone_put(tUInt8 ARG_writers_1_writeDone_put);
  tUInt8 METH_RDY_writers_1_writeDone_put();
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkCnocTop &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkCnocTop &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkCnocTop &backing);
  void vcd_submodules(tVCDDumpType dt, unsigned int levels, MOD_mkCnocTop &backing);
};

#endif /* ifndef __mkCnocTop_h__ */
